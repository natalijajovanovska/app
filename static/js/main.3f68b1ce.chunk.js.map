{"version":3,"sources":["Components/Navbar.js","Components/UpperDiv.js","Components/BottomDiv.js","Components/Footer.js","Components/Recipes.js","App.js","serviceWorker.js","index.js","Components/logo.png"],"names":["Navbar","react_default","a","createElement","className","id","src","Logo","alt","React","Component","UpperDiv","BottomDiv","scrollTopFn","window","scrollTo","top","behavior","onClick","this","title","Footer","Recipes","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","close","state","showAdd","setState","showEdit","open","currentIndex","defineProperty","recipes","newestRecipe","recipeName","ingredients","preparation","def","index","confirm","slice","splice","localStorage","setItem","JSON","stringify","alert","push","parse","getItem","_this2","_this$state","event","length","Accordion_default","defaultActiveKey","map","recipe","Card_default","key","Toggle","as","Card","Header","eventKey","Collapse","Body","item","ButtonToolbar_default","Button_default","variant","deleteRecipe","Modal_default","show","onHide","closeButton","Title","FormGroup_default","controlId","FormLabel_default","FormControl_default","type","value","placeholder","onChange","updateRecipeName","target","rows","updateIngredients","split","updatePreparation","updateNewestRecipe","saveNewRecipe","App","src_Components_Navbar","src_Components_UpperDiv","src_Components_Recipes","src_Components_BottomDiv","src_Components_Footer","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.3f68b1ce.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Navbar.css';\r\nimport Logo from './logo.png';\r\n\r\nclass Navbar extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\" id=\"navbar\">\r\n                <div className=\"row\">\r\n                    <div className=\"navbar fixed-top navbar-custom\">\r\n                        <div className=\"col-md-12\">\r\n                            <img className=\"navbar-brand img-fluid logo-custom d-block mx-auto\" src={Logo} alt=\"RECIPE-ICON\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport './UpperDiv.css';\r\n\r\nconst UpperDiv = () => {\r\n    return (\r\n        <div>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row unused\"></div>\r\n            </div>\r\n            <div className=\"container-fluid upper-custom\">\r\n                <div className=\"row align-items-center row-center-upper\">\r\n                    <div className=\"col-md-12 text-center\">\r\n                        <h1 className=\"custom-font\">Create your own Recipe Book</h1>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UpperDiv;","import React from 'react';\r\nimport './BottomDiv.css';\r\nimport Logo from './logo.png';\r\n\r\nclass BottomDiv extends React.Component {\r\n\r\n    scrollTopFn = () => {\r\n        window.scrollTo({\r\n            top: 0,\r\n            behavior: 'smooth'\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row unused\"></div>\r\n                </div>\r\n                <div className=\"container-fluid upper-custom\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <img onClick={this.scrollTopFn} className=\"img-fluid mx-auto d-block img-bottom mt-5\" title=\"Scroll to Top\" src={Logo} alt=\"RECIPE-ICON\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12 text-center\">\r\n                            <h2 className=\"custom-font\">Recipe Box <br />A place where you can save all of your recipes</h2>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default BottomDiv;","import React from 'react';\r\nimport './Footer.css';\r\n\r\nclass Footer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid footer-custom\">\r\n                <div className=\"row\">\r\n                    <div className=\"text-center col-md-12 align-items-center d-flex justify-content-center\">\r\n                        <p className=\"text-white small mt-2 font-italic\">NJ - Recipe Box 2019.</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport './Recipes.css';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport FormGroup from 'react-bootstrap/FormGroup';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nclass Recipes extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      recipes: [],\r\n      showAdd: false,\r\n      showEdit: false,\r\n      currentIndex: 0,\r\n      newestRecipe: { recipeName: \"\", ingredients: [], preparation: \"\" },\r\n      def: -1\r\n    }\r\n  }\r\n\r\n  //Deletes a recipe\r\n  deleteRecipe(index) {\r\n    if (window.confirm(\"Do you want to delete this recipe?\")) {\r\n      let recipes = this.state.recipes.slice();\r\n      recipes.splice(index, 1);\r\n      localStorage.setItem('recipes', JSON.stringify(recipes));\r\n      this.setState({ recipes });\r\n      this.setState({ def: 0 });\r\n    }\r\n  }\r\n\r\n  //Update a recipe - updates newestRecipe\r\n  updateNewestRecipe(recipeName, ingredients, preparation) {\r\n    this.setState({ newestRecipe: { recipeName: recipeName, ingredients: ingredients, preparation: preparation } })\r\n  }\r\n\r\n  //Saves new recipe in recipes\r\n  saveNewRecipe() {\r\n    if (this.state.newestRecipe.recipeName < 1 || this.state.newestRecipe.ingredients < 1 || this.state.newestRecipe.preparation < 1) {\r\n      alert(\"Enter Recipe\");\r\n    } else {\r\n      let recipes = this.state.recipes.slice();\r\n      recipes.push({ recipeName: this.state.newestRecipe.recipeName, ingredients: this.state.newestRecipe.ingredients, preparation: this.state.newestRecipe.preparation });\r\n      localStorage.setItem('recipes', JSON.stringify(recipes));\r\n      this.setState({ recipes });\r\n      this.setState({ newestRecipe: { recipeName: \"\", ingredients: [], preparation: \"\" } });\r\n      this.close();\r\n    }\r\n  }\r\n\r\n  //Closes a modal\r\n  close = () => {\r\n    if (this.state.showAdd) {\r\n      this.setState({ showAdd: false })\r\n    } else if (this.state.showEdit) {\r\n      this.setState({ showEdit: false })\r\n    }\r\n  }\r\n\r\n  //Opens a modal\r\n  open = (state, currentIndex) => {\r\n    this.setState({ [state]: true });\r\n    this.setState({ currentIndex });\r\n  }\r\n\r\n  //Update recipe name\r\n  updateRecipeName(recipeName, currentIndex) {\r\n    let recipes = this.state.recipes.slice();\r\n    recipes[currentIndex] = { recipeName: recipeName, ingredients: recipes[currentIndex].ingredients, preparation: recipes[currentIndex].preparation };\r\n    localStorage.setItem('recipes', JSON.stringify(recipes));\r\n    this.setState({ recipes });\r\n  }\r\n\r\n  //Update ingredients\r\n  updateIngredients(ingredients, currentIndex) {\r\n    let recipes = this.state.recipes.slice();\r\n    recipes[currentIndex] = { recipeName: recipes[currentIndex].recipeName, ingredients: ingredients, preparation: recipes[currentIndex].preparation };\r\n    localStorage.setItem('recipes', JSON.stringify(recipes));\r\n    this.setState({ recipes });\r\n  }\r\n\r\n  //Update preparation\r\n  updatePreparation(preparation, currentIndex) {\r\n    let recipes = this.state.recipes.slice();\r\n    recipes[currentIndex] = { recipeName: recipes[currentIndex].recipeName, ingredients: recipes[currentIndex].ingredients, preparation: preparation };\r\n    localStorage.setItem('recipes', JSON.stringify(recipes));\r\n    this.setState({ recipes });\r\n  }\r\n\r\n  componentDidMount() {\r\n    let recipes = JSON.parse(localStorage.getItem('recipes')) || [];\r\n    this.setState({ recipes });\r\n  }\r\n\r\n  render() {\r\n    const { recipes, newestRecipe, currentIndex } = this.state;\r\n\r\n    return (\r\n      <div className=\"container my-5\" >\r\n        <div className=\"container\" >\r\n          <div className=\"row\"  >\r\n            <div className=\"col-md-12\" >\r\n              <button className=\"btn mx-auto d-block btn-lg text-white button-tomato mb-5\" onClick={(event) => this.open(\"showAdd\", currentIndex)}>Add Recipe</button>\r\n              {recipes.length > 0 && (\r\n                <div>\r\n                  <Accordion defaultActiveKey={this.state.def} id=\"Recipes\">\r\n                    {recipes.map((recipe, index) => (\r\n                      <Card key={index}>\r\n                        <Accordion.Toggle className=\"bg-info text-white accordion-header-custom text-center\" as={Card.Header} eventKey={index} key={index}>\r\n                          {recipe.recipeName}\r\n                        </Accordion.Toggle>\r\n                        <Accordion.Collapse eventKey={index}>\r\n                          <Card.Body>\r\n                            <ul className=\"ul-recipe\">\r\n                              {recipe.ingredients.map((item) => (\r\n                                <li key={item}> {item} </li>\r\n                              ))}\r\n                            </ul>\r\n                            <hr />\r\n                            <p className=\"text-align-custom\">{recipe.preparation}</p>\r\n                            <ButtonToolbar className=\"mt-5 d-flex justify-content-end\">\r\n                              <Button className=\"btn-small\" variant=\"danger mr-3\" onClick={(event) => this.deleteRecipe(index)}>Delete Recipe</Button>\r\n                              <Button variant=\"default\" onClick={(event) => this.open(\"showEdit\", index)}>Edit Recipe</Button>\r\n                            </ButtonToolbar>\r\n                          </Card.Body>\r\n                        </Accordion.Collapse>\r\n                      </Card>\r\n                    ))}\r\n                  </Accordion>\r\n                  <Modal show={this.state.showEdit} onHide={this.close} className=\"mt-5\">\r\n                    <Modal.Header closeButton>\r\n                      <Modal.Title>Edit Recipe</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                      <FormGroup controlId=\"formBasicsText\">\r\n                        <FormLabel>Recipe Name</FormLabel>\r\n                        <FormControl\r\n                          type=\"text\"\r\n                          value={recipes[currentIndex].recipeName}\r\n                          placeholder=\"Edit Recipe Name\"\r\n                          onChange={(event) => this.updateRecipeName(event.target.value, currentIndex)}>\r\n                        </FormControl>\r\n                      </FormGroup>\r\n                      <FormGroup controlId=\"formControlsTextarea\">\r\n                        <FormLabel>Ingredients</FormLabel>\r\n                        <FormControl as=\"textarea\"\r\n                          rows=\"3\"\r\n                          value={recipes[currentIndex].ingredients}\r\n                          placeholder=\"Edit Ingredients (Separate by commas)\"\r\n                          onChange={(event) => this.updateIngredients(event.target.value.split(\",\"), currentIndex)}>\r\n                        </FormControl>\r\n                      </FormGroup>\r\n                      <FormGroup controlId=\"formBasicText2\">\r\n                        <FormLabel>Edit Preparation</FormLabel>\r\n                        <FormControl as=\"textarea\"\r\n                          rows=\"3\"\r\n                          value={recipes[currentIndex].preparation}\r\n                          placeholder=\"Edit Preparation\"\r\n                          onChange={(event) => this.updatePreparation(event.target.value, currentIndex)}>\r\n                        </FormControl>\r\n                      </FormGroup>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                      <button className=\"btn btn-success\" onClick={(event) => { this.close() }}>Save Edited Recipe</button>\r\n                    </Modal.Footer>\r\n                  </Modal>\r\n                </div>\r\n              )}\r\n              <Modal show={this.state.showAdd} onHide={this.close} className=\"mt-5\">\r\n                <Modal.Header closeButton>\r\n                  <Modal.Title>Add Recipe</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                  <FormGroup controlId=\"formBasicText\">\r\n                    <FormLabel>Recipe Name</FormLabel>\r\n                    <FormControl\r\n                      type=\"text\"\r\n                      value={newestRecipe.recipeName}\r\n                      placeholder=\"Enter Recipe Name\"\r\n                      onChange={(event) => this.updateNewestRecipe(event.target.value, newestRecipe.ingredients, newestRecipe.preparation)}>\r\n                    </FormControl>\r\n                  </FormGroup>\r\n                  <FormGroup controlId=\"formControlsTextarea\">\r\n                    <FormLabel>Ingredients</FormLabel>\r\n                    <FormControl as=\"textarea\"\r\n                      rows=\"3\"\r\n                      value={newestRecipe.ingredients}\r\n                      placeholder=\"Enter Ingredients (Separate by commas)\"\r\n                      onChange={(event) => this.updateNewestRecipe(newestRecipe.recipeName, event.target.value.split(\",\"), newestRecipe.preparation)}>\r\n                    </FormControl>\r\n                  </FormGroup>\r\n                  <FormGroup controlId=\"formBasicText2\">\r\n                    <FormLabel>Preparation</FormLabel>\r\n                    <FormControl as=\"textarea\"\r\n                      rows=\"3\"\r\n                      value={newestRecipe.preparation}\r\n                      placeholder=\"Preparation\"\r\n                      onChange={(event) => this.updateNewestRecipe(newestRecipe.recipeName, newestRecipe.ingredients, event.target.value)}>\r\n                    </FormControl>\r\n                  </FormGroup>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                  <button className=\"btn btn-success\" onClick={(event) => { this.saveNewRecipe() }}>Save</button>\r\n                </Modal.Footer>\r\n              </Modal>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Recipes;","import React from 'react';\nimport './App.css';\nimport Navbar from './Components/Navbar';\nimport UpperDiv from './Components/UpperDiv';\nimport BottomDiv from './Components/BottomDiv';\nimport Footer from './Components/Footer';\nimport Recipes from './Components/Recipes';\n\nclass App extends React.Component {\n\n  render() {\n    return(\n      <div>\n        <Navbar></Navbar>\n        <UpperDiv></UpperDiv>\n        <Recipes></Recipes>\n        <BottomDiv></BottomDiv>\n        <Footer></Footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.c7455457.png\";"],"sourceRoot":""}